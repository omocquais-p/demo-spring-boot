apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: test-pipeline-java
  labels:
    apps.tanzu.vmware.com/pipeline: test
    apps.tanzu.vmware.com/language: java
  annotations:
    kapp.k14s.io/create-strategy: fallback-on-update
spec:
  params:
    - name: source-url
    - name: source-revision
  tasks:
    - name: test
      params:
        - name: source-url
          value: $(params.source-url)
        - name: source-revision
          value: $(params.source-revision)
      taskSpec:
        params:
          - name: source-url
          - name: source-revision
        steps:
          - image: docker
            name: client
            env:
              # Connect to the sidecar over TCP, with TLS.
              - name: DOCKER_HOST
                value: tcp://localhost:2376
              # Verify TLS.
              - name: DOCKER_TLS_VERIFY
                value: '1'
              # Use the certs generated by the sidecar daemon.
              - name: DOCKER_CERT_PATH
                value: /certs/client
            script: |
              printenv
              find /var/run/
              find /certs/client
              # Run a Docker container.
              docker run busybox echo hello

              # Write a Dockerfile and `docker build` it.
              cat > Dockerfile << EOF
              FROM ubuntu
              RUN apt-get update
              ENTRYPOINT ["echo", "hello"]
              EOF
              docker build -t hello .
              docker images

              # ...then run it!
              docker run hello
            volumeMounts:
              - mountPath: /certs/client
                name: dind-certs
        sidecars:
          - image: docker:dind
            name: server
            args:
              - --storage-driver=vfs
              - --userland-proxy=false
              - --debug
            securityContext:
              privileged: true
            env:
              # Write generated certs to the path shared with the client.
              - name: DOCKER_TLS_CERTDIR
                value: /certs
            volumeMounts:
              - mountPath: /certs/client
                name: dind-certs
            # Wait for the dind daemon to generate the certs it will share with the
            # client.
            readinessProbe:
              periodSeconds: 1
              exec:
                command: ['ls', '/certs/client/ca.pem']
        volumes:
          - name: dind-certs
            emptyDir: {}
